name: cheqd-node CI

on: 
  push:
    paths-ignore:
    - '**.md'
    - 'docs/**'
    - 'architecture/**'
  workflow_dispatch:

env:
  NODE_CONFIGS_BASE: "~/work/cheqd-node/cheqd-node/test/networks/docker_compose/node_configs"

jobs:
  # lint:
  #   name: cheqd-node linting
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@v2
  #       with:
  #         version: v1.40
  #         args: --timeout 5m0s

  # test:
  #   name: cheqd-node unit tests
  #   runs-on: ubuntu-latest
  #   needs: lint
  #   steps:
  #     - name: Set up Go 1.16
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.16

  #     - name: Check out code into the Go module directory
  #       uses: actions/checkout@v2

  #     - name: Run tests
  #       run: |
  #         PACKAGES=$(go list ./...)
  #         go test -v $PACKAGES

  # build:
  #   name: Build cheqd-node
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - name: Set up Go 1.16
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.16

  #     # There is an issue with the latest starport, especially 0.18 version
  #     - name: Download and build starport
  #       run: wget -qO- https://github.com/tendermint/starport/releases/download/v0.17.3/starport_0.17.3_linux_amd64.tar.gz | tar xvz -C /tmp/ && sudo cp /tmp/starport /usr/bin

  #     - name: Check out code into the Go module directory
  #       uses: actions/checkout@v2

  #     - name: Starport build
  #       run: starport chain build

  # build-node-and-testnet-images:
  #   name: Build cheqd-node and testnet Docker images
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Check out
  #       uses: actions/checkout@v2

  #     - name: Build node image
  #       run: |
  #         docker build -f docker/cheqd_node/Dockerfile --no-cache -t cheqd-node .

  #     - name: Build testnet image
  #       run: |
  #         docker build -f docker/single_image_testnet/Dockerfile --no-cache -t cheqd-testnet .

  install-deb-package-and-set-up-pool:
    name: Install deb package and set up Docker pool
    runs-on: ubuntu-20.04 # exact version, not latest
    # needs: build-node-and-testnet-images
    steps:
      - name: Download and install deb package
        run: |
          wget https://github.com/cheqd/cheqd-node/releases/download/v0.2.2/cheqd-node_0.2.2_amd64.deb > /dev/null
          sudo dpkg -i cheqd-node_0.2.2_amd64.deb
          cheqd-noded help

      - name: Check out
        uses: actions/checkout@v2

      - name: Build node image
        run: |
          docker build -f docker/cheqd_node/Dockerfile --no-cache -t cheqd-node .

      - name: Set up 4 node docker pool
        run: |
          cd test/networks/docker_compose
          ./gen_node_configs.sh
          ./run_docker.sh > /dev/null &
          sleep 300
          docker ps

      - name: Add observer node
        run: |
          cd
          pwd
          cheqd-noded init node5
          cp ${{ env.NODE_CONFIGS_BASE }}/node0/.cheqdnode/config/genesis.json /home/runner/.cheqdnode/config/
          NODE0_IP=$(docker inspect -f {{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}} docker_compose_node0_1)
          echo $NODE0_IP
          PEER0=$(cat ${{ env.NODE_CONFIGS_BASE }}/node0/node_id.txt)@$NODE0_IP:26656
          echo $PEER0
          sed -ri "s|persistent_peers = \".*\"|persistent_peers = \"${PEER0}\"|" /home/runner/.cheqdnode/config/config.toml
          sed -ri "s|laddr = \"tcp://127.0.0.1:26657\"|laddr = \"tcp://127.0.0.1:26677\"|" /home/runner/.cheqdnode/config/config.toml
          sed -ri "s|laddr = \"tcp://0.0.0.0:26656\"|laddr = \"tcp://0.0.0.0:26676\"|" /home/runner/.cheqdnode/config/config.toml
          cat /home/runner/.cheqdnode/config/config.toml
          cheqd-noded start > /dev/null &
          sleep 60
          docker ps

      - name: Promote observer to validator
        run: |
          export NODE0_IP=$(docker inspect -f {{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}} docker_compose_node0_1 | sed 's/\r//g')
          echo $NODE0_IP
          export NODE1_IP=$(docker inspect -f {{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}} docker_compose_node1_1 | sed 's/\r//g')
          echo $NODE1_IP
          sudo chown -R runner:docker ${{ env.NODE_CONFIGS_BASE }}
          export HOME=${{ env.NODE_CONFIGS_BASE }}/client
          cheqd-noded keys list
          OP0_ADDRESS=$(cheqd-noded keys list | sed -nr 's/.*address: (.*?).*/\1/p' | sed -n 1p | sed 's/\r//g')
          echo $OP0_ADDRESS
          cheqd-noded keys add node5-operator
          cheqd-noded keys list
          OP5_ADDRESS=$(cheqd-noded keys list | sed -nr 's/.*address: (.*?).*/\1/p' | sed -n 1p | sed 's/\r//g')
          echo $OP5_ADDRESS
          export HOME=/home/runner
          NODE5_PUBKEY=$(cheqd-noded tendermint show-validator | sed 's/\r//g')
          echo $NODE5_PUBKEY
          curl "http://${NODE1_IP}:26657"
          sleep 15
          HOME=${{ env.NODE_CONFIGS_BASE }}/client cheqd-noded tx bank send $OP0_ADDRESS $OP5_ADDRESS 1000000000000000ncheq --chain-id cheqd --fees 5000000ncheq --node "http://$NODE1_IP:26657" -y || echo "Something went wrong!"
          sleep 60
          HOME=${{ env.NODE_CONFIGS_BASE }}/client cheqd-noded tx staking create-validator --amount 1000000000000000ncheq --from node5-operator --chain-id cheqd --min-self-delegation="1" --gas="auto" --gas-prices="25ncheq" --pubkey $NODE5_PUBKEY --commission-max-change-rate="0.02" --commission-max-rate="0.02" --commission-rate="0.01" --gas 239933 --node "http://$NODE1_IP:26657" -y
