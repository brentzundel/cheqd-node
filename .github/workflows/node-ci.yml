name: cheqd-node CI

on: 
  push:
    paths-ignore:
    - '**.md'
    - 'docs/**'
    - 'architecture/**'

jobs:
  build:
    name: Build cheqd-node
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Download and build starport
        run: curl https://get.starport.network/starport! | sudo bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Starport build
        run: starport chain build

      - uses: actions/upload-artifact@master
        with:
          name: cheqd-noded
          path: /home/runner/go/bin/

  build-node-and-testnet-images:
    name: Build cheqd-node and testnet Docker images
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: cheqd-noded
          path: /home/runner/go/bin/

      - name: Build node image
        run: |
          docker build -f docker/cheqd_node/Dockerfile --no-cache -t cheqd-node .

      # - name: Build testnet image
      #   run: |
      #     docker build -f docker/single_image_testnet/Dockerfile --no-cache -t cheqd-testnet .

      - name: Set up 4 node docker pool
        run: |
          export PATH=$PATH:/home/runner/go/bin/
          chmod +x /home/runner/go/bin/cheqd-noded
          docker/docker_compose_localnet/gen_node_configs.sh

  test:
    name: cheqd-node unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Run tests
        run: |
          PACKAGES=$(go list ./...)
          go test -v $PACKAGES

  lint:
    name: cheqd-node Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.40
          args: --timeout 5m0s
