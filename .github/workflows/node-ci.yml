name: cheqd-node CI

on: 
  push:
    paths-ignore:
    - '**.md'
    - 'docs/**'
    - 'architecture/**'

jobs:
  # lint:
  #   name: cheqd-node linting
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@v2
  #       with:
  #         version: v1.40
  #         args: --timeout 5m0s

  # test:
  #   name: cheqd-node unit tests
  #   runs-on: ubuntu-latest
  #   needs: lint
  #   steps:
  #     - name: Set up Go 1.16
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.16

  #     - name: Check out code into the Go module directory
  #       uses: actions/checkout@v2

  #     - name: Run tests
  #       run: |
  #         PACKAGES=$(go list ./...)
  #         go test -v $PACKAGES

  # build:
  #   name: Build cheqd-node
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - name: Set up Go 1.16
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.16

  #     - name: Download and build starport
  #       run: curl https://get.starport.network/starport! | sudo bash

  #     - name: Check out code into the Go module directory
  #       uses: actions/checkout@v2

  #     - name: Starport build
  #       run: starport chain build

  # build-node-and-testnet-images:
  #   name: Build cheqd-node and testnet Docker images
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Check out
  #       uses: actions/checkout@v2

  #     - name: Build node image
  #       run: |
  #         docker build -f docker/cheqd_node/Dockerfile --no-cache -t cheqd-node .

  #     - name: Build testnet image
  #       run: |
  #         docker build -f docker/single_image_testnet/Dockerfile --no-cache -t cheqd-testnet .

  install-deb-package-and-set-up-pool:
    name: Install deb package and set up Docker pool
    runs-on: ubuntu-20.04 # exact version, not latest
    # needs: build-node-and-testnet-images
    steps:
      - name: Download and install deb package
        run: |
          wget https://github.com/cheqd/cheqd-node/releases/download/v0.2.1/cheqd-node_0.2.1_amd64.deb > /dev/null
          sudo dpkg -i cheqd-node_0.2.1_amd64.deb
          cheqd-noded help

      - name: Check out
        uses: actions/checkout@v2

      - name: Build node image
        run: |
          docker build -f docker/cheqd_node/Dockerfile --no-cache -t cheqd-node .

      - name: Set up 4 node docker pool
        run: |
          cd test/networks/docker_compose
          ./gen_node_configs.sh
          ./run_docker.sh > /dev/null &
          sleep 10
          docker ps

      - name: Add deb node as observer
        run: |
          cd && mkdir node5 && cd node5
          cheqd-noded init node5 --home .
          cp ~/work/cheqd-node/cheqd-node/test/networks/docker_compose/node_configs/node0/.cheqdnode/config/genesis.json config/
          docker inspect docker_compose_node0_1
          PEER0=$(cat ~/work/cheqd-node/cheqd-node/test/networks/docker_compose/node_configs/node0/node_id.txt)@$(docker inspect -f ‘{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}’ docker_compose_node0_1):26656
          echo $PEER0
          sed -ri "s|persistent_peers = \".*\"|persistent_peers = \"${PEER0}\"|" config/config.toml
          sed -ri "s|laddr = \"tcp://127.0.0.1:26657\"|laddr = \"tcp://127.0.0.1:26677\"|" config/config.toml
          sed -ri "s|laddr = \"tcp://0.0.0.0:26656\"|laddr = \"tcp://0.0.0.0:26676\"|" config/config.toml
          cat config/config.toml
          cheqd-noded start --home .
